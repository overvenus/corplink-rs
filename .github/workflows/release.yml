name: release

on:
  push:
    tags:
      - "[0-9]+\\.[0-9]+"

jobs:
  create-release:
    name: create-release
    runs-on: ubuntu-latest
    steps:
      - name: create release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-arch-linux:
    name: build-arch-linux
    needs: ['create-release']
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      - name: build package
        id: build_package
        uses: PinkD/arch-pkgbuild-builder@v2.3
        with:
          target: "pkgbuild"
          pkgname: "pack"
      - name: upload package to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: pack/corplink-rs-*.pkg.tar.zst
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true

  build-macos:
    name: build-macos
    needs: ['create-release']
    runs-on: macos-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      - name: setup go
        uses: actions/setup-go@v5
        with:
          go-version: '>=1.22.0'
      - name: build libwg
        run: cd libwg && ./build.sh
      - name: build package
        run: cd libwg && cargo build --release
      - name: build tarball
        run: |
          cd target
          cp release/corplink-rs .
          cp ../config/config.json .
          tar -czf corplink-rs-${{ github.ref_name }}-macos-$(uname -m).tar.gz corplink-rs config.json
      - name: upload package to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/corplink-rs-*.tar.gz
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
